name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: windows-latest

    strategy:
      matrix:
        configuration: [Debug, Release]

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for MinVer

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Cache NuGet packages
      uses: actions/cache@v4
      with:
        path: ~/.nuget/packages
        key: ${{ runner.os }}-nuget-${{ hashFiles('**/*.csproj') }}
        restore-keys: |
          ${{ runner.os }}-nuget-

    - name: Restore dependencies
      run: dotnet restore

    - name: Build solution
      run: dotnet build --configuration ${{ matrix.configuration }} --no-restore

    - name: Run tests
      run: dotnet test --configuration ${{ matrix.configuration }} --no-build --verbosity normal --collect:"XPlat Code Coverage" --results-directory ./coverage --logger trx --logger "console;verbosity=detailed"

    - name: Process coverage reports
      if: matrix.configuration == 'Debug'
      run: |
        # Install reportgenerator for better coverage reports
        dotnet tool install -g dotnet-reportgenerator-globaltool

        # Generate coverage report
        reportgenerator -reports:"./coverage/**/coverage.cobertura.xml" -targetdir:"./coverage/report" -reporttypes:"Html;Cobertura"

        # Display coverage summary
        Write-Host "Coverage Summary:"
        Get-Content "./coverage/report/index.html" | Select-String -Pattern "Line coverage:" | ForEach-Object { Write-Host $_ }

    - name: Upload coverage reports to Codecov
      if: matrix.configuration == 'Debug'
      uses: codecov/codecov-action@v4
      with:
        directory: ./coverage
        files: ./coverage/**/coverage.cobertura.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false
        verbose: true
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

    - name: Upload coverage artifacts
      if: matrix.configuration == 'Debug'
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./coverage/report/
        retention-days: 30

  code-quality:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '8.0.x'

    - name: Restore dependencies
      run: dotnet restore

    - name: Format code
      run: dotnet format --verbosity diagnostic

    - name: Check for format changes
      run: |
        if (git diff --exit-code) {
          Write-Host "✅ Code formatting is correct"
        } else {
          Write-Host "❌ Code formatting issues found. The following files were auto-formatted:"
          git diff --name-only
          Write-Host "Please run 'dotnet format' locally and commit the changes."
          exit 1
        }

    - name: Build with warnings as errors
      run: dotnet build --configuration Release --verbosity normal
