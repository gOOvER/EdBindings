<?xml version="1.0" encoding="utf-8"?>
<RuleSet Name="EdBindings Analysis Rules" Description="Custom ruleset for EdBindings project quality and security analysis" ToolsVersion="16.0">
  <Rules AnalyzerId="Microsoft.CodeAnalysis.CSharp" RuleNamespace="Microsoft.CodeAnalysis.CSharp">
    <!-- Language Rules -->
    <Rule Id="CS1591" Action="Info" /> <!-- Missing XML comment for publicly visible type or member -->
    <Rule Id="CS0618" Action="Warning" /> <!-- Type or member is obsolete -->
    <Rule Id="CS8600" Action="Warning" /> <!-- Converting null literal or possible null value to non-nullable type -->
    <Rule Id="CS8601" Action="Warning" /> <!-- Possible null reference assignment -->
    <Rule Id="CS8602" Action="Warning" /> <!-- Dereference of a possibly null reference -->
    <Rule Id="CS8603" Action="Warning" /> <!-- Possible null reference return -->
    <Rule Id="CS8604" Action="Warning" /> <!-- Possible null reference argument -->
    <Rule Id="CS8618" Action="Warning" /> <!-- Non-nullable field must contain a non-null value when exiting constructor -->
    <Rule Id="CS8625" Action="Warning" /> <!-- Cannot convert null literal to non-nullable reference type -->
  </Rules>

  <Rules AnalyzerId="Microsoft.CodeAnalysis.NetAnalyzers" RuleNamespace="Microsoft.CodeAnalysis.NetAnalyzers">
    <!-- Security Rules -->
    <Rule Id="CA2100" Action="Error" /> <!-- Review SQL queries for security vulnerabilities -->
    <Rule Id="CA2109" Action="Error" /> <!-- Review visible event handlers -->
    <Rule Id="CA2119" Action="Error" /> <!-- Seal methods that satisfy private interfaces -->
    <Rule Id="CA2153" Action="Error" /> <!-- Do Not Catch Corrupted State Exceptions -->
    <Rule Id="CA2300" Action="Error" /> <!-- Do not use insecure deserializer BinaryFormatter -->
    <Rule Id="CA2301" Action="Error" /> <!-- Do not call BinaryFormatter.Deserialize without first setting BinaryFormatter.Binder -->
    <Rule Id="CA2302" Action="Error" /> <!-- Ensure BinaryFormatter.Binder is set before calling BinaryFormatter.Deserialize -->
    <Rule Id="CA2305" Action="Error" /> <!-- Do not use insecure deserializer LosFormatter -->
    <Rule Id="CA2310" Action="Error" /> <!-- Do not use insecure deserializer NetDataContractSerializer -->
    <Rule Id="CA2315" Action="Error" /> <!-- Do not use insecure deserializer ObjectStateFormatter -->
    <Rule Id="CA2321" Action="Error" /> <!-- Do not deserialize with JavaScriptSerializer using a SimpleTypeResolver -->
    <Rule Id="CA2322" Action="Error" /> <!-- Ensure JavaScriptSerializer is not initialized with SimpleTypeResolver before deserializing -->
    <Rule Id="CA3001" Action="Warning" /> <!-- Review code for SQL injection vulnerabilities -->
    <Rule Id="CA3002" Action="Warning" /> <!-- Review code for XSS vulnerabilities -->
    <Rule Id="CA3003" Action="Warning" /> <!-- Review code for file path injection vulnerabilities -->
    <Rule Id="CA3004" Action="Warning" /> <!-- Review code for information disclosure vulnerabilities -->
    <Rule Id="CA3005" Action="Warning" /> <!-- Review code for LDAP injection vulnerabilities -->
    <Rule Id="CA3006" Action="Warning" /> <!-- Review code for process command injection vulnerabilities -->
    <Rule Id="CA3007" Action="Warning" /> <!-- Review code for open redirect vulnerabilities -->
    <Rule Id="CA3008" Action="Warning" /> <!-- Review code for XPath injection vulnerabilities -->
    <Rule Id="CA3009" Action="Warning" /> <!-- Review code for XML injection vulnerabilities -->
    <Rule Id="CA3010" Action="Warning" /> <!-- Review code for XAML injection vulnerabilities -->
    <Rule Id="CA3011" Action="Warning" /> <!-- Review code for DLL injection vulnerabilities -->
    <Rule Id="CA3012" Action="Warning" /> <!-- Review code for regex injection vulnerabilities -->
    <Rule Id="CA5350" Action="Error" /> <!-- Do Not Use Weak Cryptographic Algorithms -->
    <Rule Id="CA5351" Action="Error" /> <!-- Do Not Use Broken Cryptographic Algorithms -->
    <Rule Id="CA5358" Action="Warning" /> <!-- Review cipher mode usage with cryptography experts -->
    <Rule Id="CA5359" Action="Error" /> <!-- Do Not Disable Certificate Validation -->
    <Rule Id="CA5360" Action="Error" /> <!-- Do Not Call Dangerous Methods In Deserialization -->
    <Rule Id="CA5361" Action="Warning" /> <!-- Do Not Disable SChannel Use of Strong Crypto -->
    <Rule Id="CA5362" Action="Warning" /> <!-- Potential reference cycle in deserialized object graph -->
    <Rule Id="CA5363" Action="Error" /> <!-- Do Not Disable Request Validation -->
    <Rule Id="CA5364" Action="Error" /> <!-- Do Not Use Deprecated Security Protocols -->
    <Rule Id="CA5365" Action="Error" /> <!-- Do Not Disable HTTP Header Checking -->
    <Rule Id="CA5366" Action="Error" /> <!-- Use XmlReader for 'DataSet.ReadXml()' -->
    <Rule Id="CA5367" Action="Warning" /> <!-- Do Not Serialize Types With Pointer Fields -->
    <Rule Id="CA5368" Action="Error" /> <!-- Set ViewStateUserKey For Classes Derived From Page -->
    <Rule Id="CA5369" Action="Error" /> <!-- Use XmlReader for 'XmlSerializer.Deserialize()' -->
    <Rule Id="CA5370" Action="Error" /> <!-- Use XmlReader for 'XmlValidatingReader.constructor' -->
    <Rule Id="CA5371" Action="Error" /> <!-- Use XmlReader for 'XmlSchema.Read()' -->
    <Rule Id="CA5372" Action="Error" /> <!-- Use XmlReader for XPathDocument constructor -->
    <Rule Id="CA5373" Action="Error" /> <!-- Do not use obsolete key derivation function -->
    <Rule Id="CA5374" Action="Error" /> <!-- Do Not Use XslTransform -->
    <Rule Id="CA5375" Action="Error" /> <!-- Do Not Use Account Shared Access Signature -->
    <Rule Id="CA5376" Action="Warning" /> <!-- Use SharedAccessProtocol HttpsOnly -->
    <Rule Id="CA5377" Action="Error" /> <!-- Use Container Level Access Policy -->
    <Rule Id="CA5378" Action="Error" /> <!-- Do not disable ServicePointManagerSecurityProtocols -->
    <Rule Id="CA5379" Action="Error" /> <!-- Ensure Key Derivation Function algorithm is sufficiently strong -->
    <Rule Id="CA5380" Action="Error" /> <!-- Do Not Add Certificates To Root Store -->
    <Rule Id="CA5381" Action="Error" /> <!-- Ensure Certificates Are Not Added To Root Store -->
    <Rule Id="CA5382" Action="Warning" /> <!-- Use Secure Cookies In ASP.NET Core -->
    <Rule Id="CA5383" Action="Warning" /> <!-- Ensure Use Secure Cookies In ASP.NET Core -->
    <Rule Id="CA5384" Action="Error" /> <!-- Do Not Use Digital Signature Algorithm (DSA) -->
    <Rule Id="CA5385" Action="Error" /> <!-- Use Rivest-Shamir-Adleman (RSA) Algorithm With Sufficient Key Size -->
    <Rule Id="CA5386" Action="Warning" /> <!-- Avoid hardcoding SecurityProtocolType value -->
    <Rule Id="CA5387" Action="Warning" /> <!-- Do Not Use Weak Key Derivation Function With Insufficient Iteration Count -->
    <Rule Id="CA5388" Action="Warning" /> <!-- Ensure Sufficient Iteration Count When Using Weak Key Derivation Function -->
    <Rule Id="CA5389" Action="Warning" /> <!-- Do Not Add Archive Item's Path To The Target File System Path -->
    <Rule Id="CA5390" Action="Warning" /> <!-- Do not hard-code encryption key -->
    <Rule Id="CA5391" Action="Warning" /> <!-- Use antiforgery tokens in ASP.NET Core MVC controllers -->
    <Rule Id="CA5392" Action="Warning" /> <!-- Use DefaultDllImportSearchPaths attribute for P/Invokes -->
    <Rule Id="CA5393" Action="Warning" /> <!-- Do not use unsafe DllImportSearchPath value -->
    <Rule Id="CA5394" Action="Warning" /> <!-- Do not use insecure randomness -->
    <Rule Id="CA5395" Action="Warning" /> <!-- Miss HttpVerb attribute for action methods -->
    <Rule Id="CA5396" Action="Warning" /> <!-- Set HttpOnly to true for HttpCookie -->
    <Rule Id="CA5397" Action="Error" /> <!-- Do not use deprecated SslProtocols values -->
    <Rule Id="CA5398" Action="Warning" /> <!-- Avoid hardcoded SslProtocols values -->
    <Rule Id="CA5399" Action="Error" /> <!-- HttpClients should enable certificate revocation list checks -->
    <Rule Id="CA5400" Action="Warning" /> <!-- Ensure HttpClient certificate revocation list check is not disabled -->
    <Rule Id="CA5401" Action="Warning" /> <!-- Do not use CreateEncryptor with non-default IV -->
    <Rule Id="CA5402" Action="Warning" /> <!-- Use CreateEncryptor with the default IV -->
    <Rule Id="CA5403" Action="Warning" /> <!-- Do not hard-code certificate -->

    <!-- Performance Rules -->
    <Rule Id="CA1805" Action="Warning" /> <!-- Do not initialize unnecessarily -->
    <Rule Id="CA1806" Action="Warning" /> <!-- Do not ignore method results -->
    <Rule Id="CA1810" Action="Warning" /> <!-- Initialize reference type static fields inline -->
    <Rule Id="CA1812" Action="Info" /> <!-- Avoid uninstantiated internal classes -->
    <Rule Id="CA1813" Action="Warning" /> <!-- Avoid unsealed attributes -->
    <Rule Id="CA1814" Action="Warning" /> <!-- Prefer jagged arrays over multidimensional -->
    <Rule Id="CA1815" Action="Warning" /> <!-- Override equals and operator equals on value types -->
    <Rule Id="CA1819" Action="Warning" /> <!-- Properties should not return arrays -->
    <Rule Id="CA1820" Action="Warning" /> <!-- Test for empty strings using string length -->
    <Rule Id="CA1821" Action="Warning" /> <!-- Remove empty finalizers -->
    <Rule Id="CA1822" Action="Info" /> <!-- Mark members as static -->
    <Rule Id="CA1823" Action="Warning" /> <!-- Avoid unused private fields -->
    <Rule Id="CA1824" Action="Warning" /> <!-- Mark assemblies with NeutralResourcesLanguageAttribute -->
    <Rule Id="CA1825" Action="Warning" /> <!-- Avoid zero-length array allocations -->
    <Rule Id="CA1826" Action="Warning" /> <!-- Do not use Enumerable methods on indexable collections -->
    <Rule Id="CA1827" Action="Warning" /> <!-- Do not use Count() or LongCount() when Any() can be used -->
    <Rule Id="CA1828" Action="Warning" /> <!-- Do not use CountAsync() or LongCountAsync() when AnyAsync() can be used -->
    <Rule Id="CA1829" Action="Warning" /> <!-- Use Length/Count property instead of Count() when available -->

    <!-- Reliability Rules -->
    <Rule Id="CA2000" Action="Warning" /> <!-- Dispose objects before losing scope -->
    <Rule Id="CA2002" Action="Warning" /> <!-- Do not lock on objects with weak identity -->
    <Rule Id="CA2007" Action="Info" /> <!-- Consider calling ConfigureAwait on the awaited task -->
    <Rule Id="CA2008" Action="Warning" /> <!-- Do not create tasks without passing a TaskScheduler -->
    <Rule Id="CA2009" Action="Warning" /> <!-- Do not call ToImmutableCollection on an ImmutableCollection value -->
    <Rule Id="CA2011" Action="Warning" /> <!-- Avoid infinite recursion -->
    <Rule Id="CA2012" Action="Warning" /> <!-- Use ValueTasks correctly -->
    <Rule Id="CA2013" Action="Error" /> <!-- Do not use ReferenceEquals with value types -->
    <Rule Id="CA2014" Action="Error" /> <!-- Do not use stackalloc in loops -->
    <Rule Id="CA2015" Action="Error" /> <!-- Do not define finalizers for types derived from MemoryManager&lt;T&gt; -->
    <Rule Id="CA2016" Action="Warning" /> <!-- Forward the 'CancellationToken' parameter to methods -->

    <!-- Usage Rules -->
    <Rule Id="CA2200" Action="Error" /> <!-- Rethrow to preserve stack details -->
    <Rule Id="CA2201" Action="Warning" /> <!-- Do not raise reserved exception types -->
    <Rule Id="CA2207" Action="Warning" /> <!-- Initialize value type static fields inline -->
    <Rule Id="CA2208" Action="Warning" /> <!-- Instantiate argument exceptions correctly -->
    <Rule Id="CA2211" Action="Warning" /> <!-- Non-constant fields should not be visible -->
    <Rule Id="CA2213" Action="Warning" /> <!-- Disposable fields should be disposed -->
    <Rule Id="CA2214" Action="Warning" /> <!-- Do not call overridable methods in constructors -->
    <Rule Id="CA2215" Action="Warning" /> <!-- Dispose methods should call base class dispose -->
    <Rule Id="CA2216" Action="Warning" /> <!-- Disposable types should declare finalizer -->
    <Rule Id="CA2217" Action="Warning" /> <!-- Do not mark enums with FlagsAttribute -->
    <Rule Id="CA2218" Action="Warning" /> <!-- Override GetHashCode on overriding Equals -->
    <Rule Id="CA2219" Action="Warning" /> <!-- Do not raise exceptions in finally clauses -->
    <Rule Id="CA2225" Action="Warning" /> <!-- Operator overloads have named alternates -->
    <Rule Id="CA2226" Action="Warning" /> <!-- Operators should have symmetrical overloads -->
    <Rule Id="CA2227" Action="Warning" /> <!-- Collection properties should be read only -->
    <Rule Id="CA2229" Action="Warning" /> <!-- Implement serialization constructors -->
    <Rule Id="CA2231" Action="Warning" /> <!-- Overload operator equals on overriding value type Equals -->
    <Rule Id="CA2234" Action="Warning" /> <!-- Pass system uri objects instead of strings -->
    <Rule Id="CA2235" Action="Warning" /> <!-- Mark all non-serializable fields -->
    <Rule Id="CA2237" Action="Warning" /> <!-- Mark ISerializable types with serializable -->
    <Rule Id="CA2241" Action="Warning" /> <!-- Provide correct arguments to formatting methods -->
    <Rule Id="CA2242" Action="Warning" /> <!-- Test for NaN correctly -->
    <Rule Id="CA2243" Action="Warning" /> <!-- Attribute string literals should parse correctly -->
    <Rule Id="CA2244" Action="Warning" /> <!-- Do not duplicate indexed element initializations -->
    <Rule Id="CA2245" Action="Warning" /> <!-- Do not assign a property to itself -->
    <Rule Id="CA2246" Action="Warning" /> <!-- Assigning symbol and its member in the same statement -->
    <Rule Id="CA2247" Action="Warning" /> <!-- Argument passed to TaskCompletionSource constructor should be TaskCreationOptions enum instead of TaskContinuationOptions enum -->
    <Rule Id="CA2248" Action="Warning" /> <!-- Provide correct 'enum' argument to 'Enum.HasFlag' -->
    <Rule Id="CA2249" Action="Warning" /> <!-- Consider using 'string.Contains' instead of 'string.IndexOf' -->

    <!-- Design Rules -->
    <Rule Id="CA1000" Action="Warning" /> <!-- Do not declare static members on generic types -->
    <Rule Id="CA1001" Action="Warning" /> <!-- Types that own disposable fields should be disposable -->
    <Rule Id="CA1002" Action="Warning" /> <!-- Do not expose generic lists -->
    <Rule Id="CA1003" Action="Warning" /> <!-- Use generic event handler instances -->
    <Rule Id="CA1005" Action="Warning" /> <!-- Avoid excessive parameters on generic types -->
    <Rule Id="CA1008" Action="Warning" /> <!-- Enums should have zero value -->
    <Rule Id="CA1010" Action="Warning" /> <!-- Generic interface should also be implemented -->
    <Rule Id="CA1012" Action="Warning" /> <!-- Abstract types should not have constructors -->
    <Rule Id="CA1014" Action="Info" /> <!-- Mark assemblies with CLSCompliant -->
    <Rule Id="CA1016" Action="Warning" /> <!-- Mark assemblies with assembly version -->
    <Rule Id="CA1017" Action="Warning" /> <!-- Mark assemblies with ComVisible -->
    <Rule Id="CA1018" Action="Warning" /> <!-- Mark attributes with AttributeUsageAttribute -->
    <Rule Id="CA1019" Action="Warning" /> <!-- Define accessors for attribute arguments -->
    <Rule Id="CA1021" Action="Warning" /> <!-- Avoid out parameters -->
    <Rule Id="CA1024" Action="Warning" /> <!-- Use properties where appropriate -->
    <Rule Id="CA1027" Action="Warning" /> <!-- Mark enums with FlagsAttribute -->
    <Rule Id="CA1028" Action="Warning" /> <!-- Enum Storage should be Int32 -->
    <Rule Id="CA1030" Action="Warning" /> <!-- Use events where appropriate -->
    <Rule Id="CA1031" Action="Warning" /> <!-- Do not catch general exception types -->
    <Rule Id="CA1032" Action="Warning" /> <!-- Implement standard exception constructors -->
    <Rule Id="CA1033" Action="Warning" /> <!-- Interface methods should be callable by child types -->
    <Rule Id="CA1034" Action="Warning" /> <!-- Nested types should not be visible -->
    <Rule Id="CA1036" Action="Warning" /> <!-- Override methods on comparable types -->
    <Rule Id="CA1040" Action="Warning" /> <!-- Avoid empty interfaces -->
    <Rule Id="CA1041" Action="Warning" /> <!-- Provide ObsoleteAttribute message -->
    <Rule Id="CA1043" Action="Warning" /> <!-- Use Integral Or String Argument For Indexers -->
    <Rule Id="CA1044" Action="Warning" /> <!-- Properties should not be write only -->
    <Rule Id="CA1045" Action="Warning" /> <!-- Do not pass types by reference -->
    <Rule Id="CA1046" Action="Warning" /> <!-- Do not overload equality operator on reference types -->
    <Rule Id="CA1047" Action="Warning" /> <!-- Do not declare protected member in sealed type -->
    <Rule Id="CA1050" Action="Warning" /> <!-- Declare types in namespaces -->
    <Rule Id="CA1051" Action="Warning" /> <!-- Do not declare visible instance fields -->
    <Rule Id="CA1052" Action="Warning" /> <!-- Static holder types should be Static or NotInheritable -->
    <Rule Id="CA1054" Action="Warning" /> <!-- URI-like parameters should not be strings -->
    <Rule Id="CA1055" Action="Warning" /> <!-- URI-like return values should not be strings -->
    <Rule Id="CA1056" Action="Warning" /> <!-- URI-like properties should not be strings -->
    <Rule Id="CA1058" Action="Warning" /> <!-- Types should not extend certain base types -->
    <Rule Id="CA1060" Action="Warning" /> <!-- Move pinvokes to native methods class -->
    <Rule Id="CA1061" Action="Warning" /> <!-- Do not hide base class methods -->
    <Rule Id="CA1062" Action="Info" /> <!-- Validate arguments of public methods -->
    <Rule Id="CA1063" Action="Warning" /> <!-- Implement IDisposable Correctly -->
    <Rule Id="CA1064" Action="Warning" /> <!-- Exceptions should be public -->
    <Rule Id="CA1065" Action="Warning" /> <!-- Do not raise exceptions in unexpected locations -->
    <Rule Id="CA1066" Action="Warning" /> <!-- Implement IEquatable when overriding Object.Equals -->
    <Rule Id="CA1067" Action="Warning" /> <!-- Override Object.Equals(object) when implementing IEquatable&lt;T&gt; -->
    <Rule Id="CA1068" Action="Warning" /> <!-- CancellationToken parameters must come last -->
    <Rule Id="CA1069" Action="Warning" /> <!-- Enums values should not be duplicated -->
    <Rule Id="CA1070" Action="Warning" /> <!-- Do not declare event fields as virtual -->

    <!-- Naming Rules -->
    <Rule Id="CA1700" Action="Warning" /> <!-- Do not name enum values 'Reserved' -->
    <Rule Id="CA1707" Action="Info" /> <!-- Identifiers should not contain underscores -->
    <Rule Id="CA1708" Action="Warning" /> <!-- Identifiers should differ by more than case -->
    <Rule Id="CA1710" Action="Warning" /> <!-- Identifiers should have correct suffix -->
    <Rule Id="CA1711" Action="Warning" /> <!-- Identifiers should not have incorrect suffix -->
    <Rule Id="CA1712" Action="Warning" /> <!-- Do not prefix enum values with type name -->
    <Rule Id="CA1713" Action="Warning" /> <!-- Events should not have 'Before' or 'After' prefix -->
    <Rule Id="CA1714" Action="Warning" /> <!-- Flags enums should have plural names -->
    <Rule Id="CA1715" Action="Warning" /> <!-- Identifiers should have correct prefix -->
    <Rule Id="CA1716" Action="Warning" /> <!-- Identifiers should not match keywords -->
    <Rule Id="CA1717" Action="Warning" /> <!-- Only FlagsAttribute enums should have plural names -->
    <Rule Id="CA1720" Action="Warning" /> <!-- Identifier contains type name -->
    <Rule Id="CA1721" Action="Warning" /> <!-- Property names should not match get methods -->
    <Rule Id="CA1724" Action="Warning" /> <!-- Type names should not match namespaces -->
    <Rule Id="CA1725" Action="Warning" /> <!-- Parameter names should match base declaration -->

    <!-- Globalization Rules -->
    <Rule Id="CA1303" Action="Info" /> <!-- Do not pass literals as localized parameters -->
    <Rule Id="CA1304" Action="Warning" /> <!-- Specify CultureInfo -->
    <Rule Id="CA1305" Action="Warning" /> <!-- Specify IFormatProvider -->
    <Rule Id="CA1307" Action="Warning" /> <!-- Specify StringComparison for clarity -->
    <Rule Id="CA1308" Action="Warning" /> <!-- Normalize strings to uppercase -->
    <Rule Id="CA1309" Action="Warning" /> <!-- Use ordinal string comparison -->
    <Rule Id="CA1310" Action="Warning" /> <!-- Specify StringComparison for correctness -->
  </Rules>

  <Rules AnalyzerId="StyleCop.Analyzers" RuleNamespace="StyleCop.Analyzers">
    <!-- Documentation Rules -->
    <Rule Id="SA1600" Action="Info" /> <!-- Elements should be documented -->
    <Rule Id="SA1601" Action="Info" /> <!-- Partial elements should be documented -->
    <Rule Id="SA1602" Action="Info" /> <!-- Enumeration items should be documented -->
    <Rule Id="SA1633" Action="None" /> <!-- File should have header -->
    <Rule Id="SA1652" Action="None" /> <!-- Enable XML documentation output -->

    <!-- Layout Rules -->
    <Rule Id="SA1200" Action="None" /> <!-- Using directives should be placed correctly -->
    <Rule Id="SA1208" Action="Warning" /> <!-- System using directives should be placed before other using directives -->

    <!-- Naming Rules -->
    <Rule Id="SA1309" Action="None" /> <!-- Field names should not begin with underscore -->
    <Rule Id="SA1311" Action="None" /> <!-- Static readonly fields should begin with upper-case letter -->

    <!-- Maintainability Rules -->
    <Rule Id="SA1404" Action="Warning" /> <!-- Code analysis suppression should have justification -->

    <!-- Spacing Rules -->
    <Rule Id="SA1000" Action="Warning" /> <!-- Keywords should be spaced correctly -->
    <Rule Id="SA1003" Action="Warning" /> <!-- Symbols should be spaced correctly -->
  </Rules>
</RuleSet>